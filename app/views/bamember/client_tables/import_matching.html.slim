- set_meta_tags title: "#{@table.client.name}/#{@table.name} マッチング"
- breadcrumb  :clients_table_import_matching, @csvfile

- select_client_columns = [["--使用しない--", ""], ["ID", :id]] + @table.show_columns.pluck(:name, :column_name)
- select_methods        = {"空欄に保存" => :save, "上書き" => :update, "マッチング" => :matching}

coffee:
  $ ->
    $(document).on 'change', 'select.column_name', ->
      $_act = $(@).closest('tr').find('select.action')
      
      # 処理項目の表示切替
      val = $(@).val()
      if val then $_act.show() else $_act.hide()
      if val == 'id' then $_act.val('matching')
      
      # IDはマッチングのみ選択
      $_act.attr('readonly', (if val == 'id' then 'readonly' else null))
      
      # 使用済み項目を非表示
      $('select.column_name option').show()
      $('select.column_name').each ->
        val2 = $(@).val()
        if val2 == "" then return true
        $('select.column_name').each ->
          if $(@).val() != val2
            $(@).find('option').each ->
              if $(@).attr('value') == val2 then $(@).hide()
      
    $('select.column_name').trigger('change')

.col-md-8.col-md-offset-2
  dl.dl-horizontal
    dt データ件数
    dd #{number_with_delimiter(@csvfile.all_num)} 件 (先頭行、空行を除く)
    
  = form_tag({action: :import_do}, method: :post, class: 'form-horizontal') do
    table.table.table-striped.table-hover.table-responsive
      caption マッチング項目設定
      tr
        th CSV項目
        th ⇒
        th テーブル項目
        th 処理
      - @csvfile.header.each_with_index do |h, i|
        tr
          td
            .column  = h
            .example = @first[i]
          td ⇒
          td = select_tag("table_header[#{i}]",
            options_for_select(select_client_columns, params.dig("table_header", i.to_s)),
            class: "form-control column_name")
          td = select_tag("method[#{i}]",
            options_for_select(select_methods, params.dig("method", i.to_s)),
            class: "form-control action")
          
    .form-group
      / .col-sm-4 = label_tag  :option_if, "マッチング条件", class: "control-label"
      .col-sm-3: label.control-label(for="option[if]") マッチング条件
      .col-sm-5 = select_tag("option[if]",
        options_for_select({"AND条件" => :and, "OR条件" => :or, "AND条件でなければOR条件(曖昧検索)" => nil}, params.dig("option", "if")),
        class: "form-control")
    .form-group
      .col-sm-3 = label_tag  "option[unmatch]", "マッチしなかったデータ", class: "control-label"
      .col-sm-5 = select_tag "option[unmatch]", options_for_select({"エラー(エラーCSVに出力)" => nil, "新規登録" => :new}, params.dig("option", "unmatch")), class: "form-control"
    .form-group
      .col-sm-3 
      .col-sm-5
        / = check_box_tag :background, {}, checked: false
        = check_box_tag :background
        = label_tag  "background", " バックグラウンド処理", class: "control-label"
      
    div style="text-align:center;"
      = link_to "/bamember/clients/#{@table.client.id}/table/#{@table.id}/search.csv?all=1", class: "btn btn-warning backup" do
        span.glyphicon.glyphicon-save-file
        =< "エクスポート"
    div style="text-align:center;"
      span.glyphicon.glyphicon-arrow-down
    = button_tag data: { confirm: "データを反映してよろしいでしょうか\r事前にエクスポートをしておくことをお勧めいたします", "disable-with" => "処理中..."}, class: "btn btn-success center-block" do
      span.glyphicon.glyphicon-check
      =< "内容を反映"
      
